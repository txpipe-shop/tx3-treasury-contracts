// This file is auto-generated by trix bindgen.

import {
    TRPClient,
    type ArgValue,
    type ClientOptions,
    type SubmitParams,
    type ResolveResponse,
} from "tx3-sdk/trp";


export const DEFAULT_TRP_ENDPOINT = "http://localhost:8164";

export const DEFAULT_HEADERS = {
};

export const DEFAULT_ENV_ARGS = {
};

export type TreasuryWithdrawParams = {
    am: ArgValue;
    person: ArgValue;
    registryutxo: ArgValue;
    treasuryscript: ArgValue;
}

export const TREASURY_WITHDRAW_IR = {
    bytecode: "0e03010e010c72656769737472797574786f07010763757272656e740e020763757272656e740e0106706572736f6e050d01000006fc8096980000000000020e010e747265617375727973637269707405000d0100000e0102616d020e0106706572736f6e05000f0211010e020763757272656e740e0106706572736f6e050d01000006fc809698000000000e03000000010a7769746864726177616c030872656465656d65720400000a63726564656e7469616c0e010e74726561737572797363726970740506616d6f756e740e0102616d02000000",
    encoding: "hex",
    version: "v1alpha8",
};

export type TreasuryFundParams = {
    am: ArgValue;
    collateralinput: ArgValue;
    person: ArgValue;
    registryref: ArgValue;
    treasuryref: ArgValue;
    treasuryscript: ArgValue;
    until: ArgValue;
    vendorkeyhash: ArgValue;
    vendorscript: ArgValue;
}

export const TREASURY_FUND_IR = {
    bytecode: "0e03020e010b7265676973747279726566070e010b747265617375727972656607020763757272656e740e020763757272656e740e010e7472656173757279736372697074050f010d0100000e0102616d020d01000006fc00093d0000000004020102010800020108000e0102616d02056f776e65720e02056f776e65720e0106706572736f6e050d01000006fc8096980000000000030e010c76656e646f72736372697074050400020400010e010d76656e646f726b65796861736804010104000306fd003f1f983303000002010800020108000e0102616d020400000d0100000e0102616d020e010e747265617375727973637269707405000f0211010e020763757272656e740e010e7472656173757279736372697074050f010d0100000e0102616d020d01000006fc00093d000000000d0100000e0102616d020e0106706572736f6e05000f0211010e02056f776e65720e0106706572736f6e050d01000006fc809698000000000e0301000e0105756e74696c02000000010e020a636f6c6c61746572616c00000e010f636f6c6c61746572616c696e70757407000101010e0106706572736f6e0500",
    encoding: "hex",
    version: "v1alpha8",
};

export class Client {
    readonly #client: TRPClient;

    constructor(options: ClientOptions) {
        this.#client = new TRPClient(options);
    }

    async treasuryWithdrawTx(args: TreasuryWithdrawParams): Promise<ResolveResponse> {
        return await this.#client.resolve({
            tir: TREASURY_WITHDRAW_IR,
            args,
        });
    }
    async treasuryFundTx(args: TreasuryFundParams): Promise<ResolveResponse> {
        return await this.#client.resolve({
            tir: TREASURY_FUND_IR,
            args,
        });
    }


    async submit(params: SubmitParams): Promise<void> {
        await this.#client.submit(params);
    }
}

// Create a default client instance
export const protocol = new Client({
    endpoint: DEFAULT_TRP_ENDPOINT,
    headers: DEFAULT_HEADERS,
    envArgs: DEFAULT_ENV_ARGS,
});
